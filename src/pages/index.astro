---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'Book of CHADS'
};

const stories = [
  {
    id: 1,
    author: "DisperseControl",
    period: "2017-2024",
    title: "The -300K Bear Slayer",
    subtitle: "From Rekt to Revival",
    story: "When I first got started in 2017 I had a net worth of close to -$300K (negative) and could barely scrape together $200 to buy anything. Then in 2019/20 lost my job and house lol. Thanks to crypto I have pretty much flipped the entire situation in the other direction. I have a visceral hatred for bears",
    theme: "from-[#2A9D8F] to-[#264653]",
    emoji: "🗡️"
  },
  {
    id: 2,
    author: "floatxbt",
    period: "2024",
    title: "Built Different",
    subtitle: "Never Stop The Grind",
    story: "Bro im built different, i lost every single satoshi u see here but got up everyday hungry and hunting with a positive attitude",
    theme: "from-[#E9C46A] to-[#F4A261]",
    emoji: "⚔️"
  },
  {
    id: 3,
    author: "c0gnate",
    period: "2015",
    title: "The Generous Tipper",
    subtitle: "When Bitcoin Was Young",
    story: "in 2015 one of my homies ordered me 1/2oz of weed on darkweb, i gave him like $220 to buy 1 BTC. the order came to like 0.8BTC and i just said keep the change cos i had no idea keke... the weed was chronic tho tbh",
    theme: "from-[#ffc131] to-[#E63946]",
    emoji: "🌿"
  }
];

const reversedStories = [...stories].reverse();

// Chad wisdom quotes
const chadQuotes = [
  "We're All Gonna Make It Brah 💪",
  "1 BTC = 1 BTC 🎯",
  "Fortune Favors the Brave ⚔️",
  "WAGMI 🚀",
  "Stay SAFU Kings 👑",
  "Bears Get Rekt 🗡️",
  "Never Sell, Only Buy 💎",
  "Wen Lambo? Now Lambo 🏎️",
  "Up Only 📈",
  "Degen Season 24/7 🎲"
];

// Achievement data
const achievements = [
  { id: 'start-reading', name: 'Based Reader', description: 'Started the CHAD journey', emoji: '📚' },
  { id: 'scroll-half', name: 'Diamond Hands', description: 'Halfway through the tales', emoji: '💎' },
  { id: 'finish-reading', name: 'Certified CHAD', description: 'Completed all CHAD tales', emoji: '👑' },
  { id: 'konami', name: 'GigaChad Mode', description: 'Found the secret code', emoji: '🔱' }
];
---

<Layout {metadata}>
  <!-- Matrix Canvas Background -->
  <canvas id="matrixCanvas" class="fixed inset-0 pointer-events-none opacity-10"></canvas>

  <!-- Power Level Progress Bar -->
  <div class="fixed top-0 left-0 right-0 z-50 bg-black/80 text-[#ffc131] pixel-edges">
    <div class="max-w-7xl mx-auto px-4 py-2">
      <div class="flex items-center gap-4">
        <span class="text-xs md:text-sm uppercase tracking-wider">CHAD Level:</span>
        <div class="flex-1 bg-white/10 h-2 rounded-full overflow-hidden">
          <div 
            class="h-full bg-gradient-to-r from-[#ffc131] via-[#ff6b6b] to-[#ffc131] bg-size-200 animate-gradient-x power-bar"
            style="width: 0%"
          ></div>
        </div>
        <span class="power-level text-xs md:text-sm font-bold">9000</span>
      </div>
    </div>
  </div>

  <!-- Achievement Popup -->
  <div class="fixed top-20 right-4 z-50 achievement-container"></div>

  <!-- Main Content -->
  <div class="min-h-screen bg-[#F5F1E3] text-[#2C3639] overflow-x-hidden font-pixel">
    <!-- Cover Page -->
    <section class="min-h-screen flex flex-col items-center justify-center p-4 relative">
      <!-- Enhanced Pixel Grid Background -->
      <div class="absolute inset-0">
        <div class="absolute inset-0 grid grid-cols-[repeat(32,1fr)] grid-rows-[repeat(32,1fr)] opacity-10">
          {Array.from({ length: 1024 }).map(() => (
            <div class="border-[0.5px] border-[#2C3639]/10 hover:bg-[#ffc131]/20 transition-colors duration-300"></div>
          ))}
        </div>
        <div class="absolute inset-0 bg-gradient-radial from-transparent to-[#F5F1E3] pointer-events-none"></div>
      </div>

      <!-- Enhanced Floating Elements -->
      <div class="absolute inset-0 overflow-hidden pointer-events-none">
        {Array.from({ length: 12 }).map((_, i) => (
          <div 
            class="absolute w-12 h-12 pixel-float"
            style={`
              top: ${Math.random() * 100}%;
              left: ${Math.random() * 100}%;
              animation-delay: ${Math.random() * 5}s;
              animation-duration: ${5 + Math.random() * 5}s;
            `}
          >
            {["💪", "👑", "⚔️", "💎", "🚀", "💯", "🐋", "🔱"][Math.floor(Math.random() * 8)]}
          </div>
        ))}
      </div>

      <!-- Enhanced Hero Content -->
      <div class="relative z-10 text-center max-w-4xl mx-auto px-4">
        <div class="glitch-wrapper mb-12">
          <h1 class="text-6xl md:text-8xl font-black text-[#2C3639] pixel-edges mb-2 glitch-text" data-text="BOOK OF CHADS">
            BOOK OF CHADS
          </h1>
          <div class="h-1 w-full bg-gradient-to-r from-transparent via-[#ffc131] to-transparent"></div>
        </div>
        
        <div class="bg-white p-8 pixel-border mb-12 transform hover:translate-y-[-2px] transition-all duration-300 relative group">
          <p class="text-2xl md:text-3xl pixel-edges text-gradient">
            Don't let your memes be dreams
          </p>
          <div class="absolute inset-0 border-2 border-[#ffc131] opacity-0 group-hover:opacity-100 transform scale-105 group-hover:scale-100 transition-all duration-500"></div>
        </div>

        <button 
          onclick="document.getElementById('story-3').scrollIntoView({behavior: 'smooth'})"
          class="relative inline-block group"
        >
          <span class="absolute inset-0 bg-[#ffc131] blur-lg opacity-50 group-hover:opacity-75 transition-opacity"></span>
          <span class="relative px-8 py-4 bg-[#ffc131] text-white font-bold text-xl block pixel-border transform transition-all duration-200 group-hover:translate-y-[-4px] group-hover:shadow-xl">
            START READING
            <span class="absolute inset-0 bg-white/20 opacity-0 group-hover:opacity-100 transition-opacity"></span>
          </span>
        </button>
      </div>

      <!-- Enhanced Scroll Indicator -->
      <div class="absolute bottom-8 left-1/2 -translate-x-1/2 space-y-2 text-center">
        <p class="text-[#2C3639]/60 text-sm uppercase tracking-wider pixel-edges animate-pulse">Scroll to Begin</p>
        <div class="w-6 h-6 border-b-2 border-r-2 border-[#2C3639]/60 rotate-45 animate-bounce"></div>
      </div>
    </section>

    <!-- Enhanced Stories -->
    {reversedStories.map((story, index) => (
      <section
        class="min-h-screen flex items-center justify-center p-4 relative snap-start"
        id={`story-${story.id}`}
        data-story-id={story.id}
      >
        <!-- Story-specific background effects -->
        <div class="absolute inset-0">
          <div class="absolute inset-0 grid grid-cols-[repeat(32,1fr)] grid-rows-[repeat(32,1fr)] opacity-5">
            {Array.from({ length: 1024 }).map(() => (
              <div class={`border-[0.5px] border-[#2C3639]/10 transition-colors duration-500 story-grid-cell`}></div>
            ))}
          </div>
          <div class="absolute inset-0 bg-gradient-to-b from-transparent via-white/5 to-transparent"></div>
        </div>

        <div class="max-w-4xl w-full">
          <!-- Enhanced Story Card -->
          <div class="story-card bg-white pixel-border p-8 relative group">
            <!-- Animated Corner Decorations -->
            <div class="absolute top-0 left-0 w-4 h-4 border-t-2 border-l-2 border-[#ffc131] transform -translate-x-1 -translate-y-1 group-hover:scale-125 transition-transform"></div>
            <div class="absolute top-0 right-0 w-4 h-4 border-t-2 border-r-2 border-[#ffc131] transform translate-x-1 -translate-y-1 group-hover:scale-125 transition-transform"></div>
            <div class="absolute bottom-0 left-0 w-4 h-4 border-b-2 border-l-2 border-[#ffc131] transform -translate-x-1 translate-y-1 group-hover:scale-125 transition-transform"></div>
            <div class="absolute bottom-0 right-0 w-4 h-4 border-b-2 border-r-2 border-[#ffc131] transform translate-x-1 translate-y-1 group-hover:scale-125 transition-transform"></div>

            <!-- Story Header -->
            <header class="flex flex-col md:flex-row justify-between items-start gap-6 mb-8">
              <div class="space-y-4">
                <div class="flex items-center gap-4">
                  <span class="text-6xl pixel-edges animate-emoji-float cursor-pointer hover:scale-125 transition-transform duration-200" title="Click me!">
                    {story.emoji}
                  </span>
                  <div class="h-12 w-px bg-[#2C3639]/20"></div>
                  <div class="space-y-1">
                    <p class="text-[#2C3639]/60 pixel-edges text-sm">{story.period}</p>
                    <div class="flex gap-2">
                      {Array(5).fill('⭐').map((star, i) => (
                        <span class="text-[#ffc131] opacity-0 animate-fade-in" style={`animation-delay: ${i * 200}ms`}>{star}</span>
                      ))}
                    </div>
                  </div>
                </div>
                
                <div class="glitch-wrapper">
                  <h2 class="text-3xl md:text-4xl font-bold text-[#2C3639] pixel-edges glitch-text" data-text={story.title}>
                    {story.title}
                  </h2>
                </div>
                
                <p class="text-xl text-[#2C3639]/70 pixel-edges">{story.subtitle}</p>
              </div>
              
              <!-- Enhanced Author Link -->
              <a 
                href={`https://twitter.com/${story.author}`}
                target="_blank"
                rel="noopener noreferrer"
                class="author-link group flex items-center gap-2 px-4 py-2 rounded-lg transition-all duration-300"
              >
                <span class="text-[#ffc131] group-hover:rotate-12 transition-transform">𝕏</span>
                <span class="text-xl relative">
                  {story.author}
                  <span class="absolute left-0 right-0 bottom-0 h-px bg-[#ffc131] transform scale-x-0 group-hover:scale-x-100 transition-transform origin-left"></span>
                </span>
              </a>
            </header>

            <!-- Enhanced Story Content -->
            <div class="story-content relative">
              <div class="absolute -left-4 top-0 bottom-0 w-1 bg-gradient-to-b from-transparent via-[#ffc131] to-transparent opacity-50"></div>
              <p class="text-xl md:text-2xl leading-relaxed pixel-edges typing-effect">
                "{story.story}"
              </p>
            </div>

            <!-- Story Reactions -->
            <div class="mt-8 flex flex-wrap gap-4">
              {['🔥', '💎', '🚀', '🐻'].map((emoji) => (
                <button 
                  class="reaction-btn flex items-center gap-2 px-4 py-2 bg-white rounded-lg border-2 border-[#2C3639] hover:bg-[#ffc131]/10 transition-colors"
                  data-emoji={emoji}
                >
                  <span class="text-2xl">{emoji}</span>
                  <span class="text-sm font-bold">0</span>
                </button>
              ))}
            </div>

            <!-- Enhanced Navigation -->
            <nav class="mt-12 flex justify-between items-center">
              {index > 0 && (
                <button 
                  onclick={`document.getElementById('story-${reversedStories[index - 1].id}').scrollIntoView({behavior: 'smooth'})`}
                  class="nav-button group"
                >
                  <span class="transform group-hover:-translate-x-2 transition-transform inline-block">←</span>
                  <span class="ml-2">PREVIOUS TALE</span>
                </button>
              )}

              <!-- Story Progress Indicator -->
              <div class="hidden md:flex items-center gap-2">
                {reversedStories.map((_, i) => (
                  <div 
                    class={`w-2 h-2 rounded-full transition-all duration-300 ${
                      i === index ? 'bg-[#ffc131] w-4' : 'bg-[#2C3639]/20'
                    }`}
                  ></div>
                ))}
              </div>

              {index < reversedStories.length - 1 && (
                <button 
                  onclick={`document.getElementById('story-${reversedStories[index + 1].id}').scrollIntoView({behavior: 'smooth'})`}
                  class="nav-button group"
                >
                  <span class="mr-2">NEXT TALE</span>
                  <span class="transform group-hover:translate-x-2 transition-transform inline-block">→</span>
                </button>
              )}
            </nav>
          </div>
        </div>
      </section>
    ))}

    <!-- Enhanced Trade Button -->
    <div class="fixed bottom-4 right-4 z-50">
      <a
        href="https://www.tensor.trade/trade/chads"
        target="_blank"
        rel="noopener noreferrer"
        class="trade-button group relative inline-block"
      >
        <span class="absolute inset-0 bg-[#ffc131] blur-lg opacity-50 group-hover:opacity-100 transition-opacity"></span>
        <span class="relative px-6 py-3 bg-[#ffc131] text-white font-bold block pixel-border transform
          transition-all duration-200 group-hover:translate-y-[-4px] group-hover:translate-x-[2px]">
          BECOME A CHAD
          <span class="inline-block transform group-hover:translate-x-1 transition-transform">↗</span>
        </span>
      </a>
    </div>

    <!-- Chad Wisdom Quotes -->
    <div class="fixed bottom-4 left-4 max-w-sm z-50 pointer-events-none">
      <div class="bg-black/80 text-[#ffc131] p-4 pixel-border transform translate-y-0 opacity-100 transition-all duration-500">
        <p class="chad-quote pixel-edges"></p>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Matrix Rain Effect
  function initMatrix() {
    const canvas = document.getElementById('matrixCanvas');
    const ctx = canvas.getContext('2d');

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const chars = '01CHAD₿ΞDEGEN'.split('');
    const drops = Array(Math.floor(canvas.width/20)).fill(0);

    function draw() {
      ctx.fillStyle = 'rgba(245, 241, 227, 0.05)';
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      
      ctx.fillStyle = '#ffc131';
      ctx.font = '20px monospace';
      
      drops.forEach((y, i) => {
        const char = chars[Math.floor(Math.random() * chars.length)];
        const x = i * 20;
        ctx.fillText(char, x, y);
        
        if (y > canvas.height && Math.random() > 0.975) {
          drops[i] = 0;
        }
        drops[i] += 20;
      });
    }

    setInterval(draw, 50);
  }

  // Power Level System
  function initPowerLevel() {
    const powerBar = document.querySelector('.power-bar');
    const powerLevel = document.querySelector('.power-level');
    let currentPower = 9000;

    window.addEventListener('scroll', () => {
      const scrollPercent = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
      powerBar.style.width = `${scrollPercent}%`;
      currentPower = Math.floor(9000 + (scrollPercent * 100));
      powerLevel.textContent = currentPower.toLocaleString();

      // Trigger achievements based on scroll position
      if (scrollPercent > 25) triggerAchievement('start-reading');
      if (scrollPercent > 50) triggerAchievement('scroll-half');
      if (scrollPercent > 95) triggerAchievement('finish-reading');
    });
  }

  // Achievement System
  function triggerAchievement(id) {
    if (localStorage.getItem(`achievement-${id}`)) return;

    const achievement = achievements.find(a => a.id === id);
    if (!achievement) return;

    const container = document.querySelector('.achievement-container');
    const element = document.createElement('div');
    element.className = 'achievement-popup transform translate-x-full';
    element.innerHTML = `
      <div class="bg-black/90 text-[#ffc131] p-4 rounded pixel-border flex items-center gap-4 mb-4">
        <div class="text-4xl">${achievement.emoji}</div>
        <div>
          <h3 class="font-bold">${achievement.name}</h3>
          <p class="text-sm">${achievement.description}</p>
        </div>
      </div>
    `;

    container.appendChild(element);
    requestAnimationFrame(() => {
      element.classList.remove('translate-x-full');
    });

    localStorage.setItem(`achievement-${id}`, 'true');
    setTimeout(() => element.remove(), 5000);
  }

  // Chad Wisdom System
  function initChadWisdom() {
    const quoteElement = document.querySelector('.chad-quote');
    let lastQuote = '';

    function updateQuote() {
      let newQuote;
      do {
        newQuote = chadQuotes[Math.floor(Math.random() * chadQuotes.length)];
      } while (newQuote === lastQuote);
      
      lastQuote = newQuote;
      quoteElement.textContent = newQuote;
    }

    updateQuote();
    setInterval(updateQuote, 5000);
  }

  // Reaction System
  function initReactions() {
    document.querySelectorAll('.reaction-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const count = btn.querySelector('span:last-child');
        count.textContent = parseInt(count.textContent) + 1;
        
        // Spawn floating emoji
        const emoji = document.createElement('div');
        emoji.className = 'absolute text-2xl pointer-events-none';
        emoji.style.cssText = `
          top: ${btn.offsetTop}px;
          left: ${btn.offsetLeft + btn.offsetWidth/2}px;
          animation: float-up 1s forwards;
        `;
        emoji.textContent = btn.dataset.emoji;
        document.body.appendChild(emoji);
        setTimeout(() => emoji.remove(), 1000);
      });
    });
  }

  // Initialize everything
  document.addEventListener('DOMContentLoaded', () => {
    initMatrix();
    initPowerLevel();
    initChadWisdom();
    initReactions();
  });
</script>

<style>
:root {
  /* Core Colors */
  --chad-gold: #ffc131;
  --chad-dark: #2C3639;
  --chad-cream: #F5F1E3;
  --chad-success: #00ff9d;
  --chad-error: #ff4646;
  
  /* Gradients */
  --gradient-gold: linear-gradient(
    135deg,
    var(--chad-gold) 0%,
    #ff9a00 50%,
    var(--chad-gold) 100%
  );
  
  --gradient-dark: linear-gradient(
    135deg,
    var(--chad-dark) 0%,
    #1a1e1f 50%,
    var(--chad-dark) 100%
  );

  /* Animation Timing */
  --transition-fast: 200ms;
  --transition-medium: 300ms;
  --transition-slow: 500ms;
  
  /* Shadows */
  --shadow-sm: 0 2px 4px rgba(44, 54, 57, 0.1);
  --shadow-md: 0 4px 8px rgba(44, 54, 57, 0.15);
  --shadow-lg: 0 8px 16px rgba(44, 54, 57, 0.2);
  
  /* Z-index Layers */
  --z-background: -1;
  --z-content: 1;
  --z-overlay: 10;
  --z-modal: 20;
  --z-tooltip: 30;
}

/* Reset & Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: var(--chad-cream);
  color: var(--chad-dark);
  font-family: 'PixelFont', monospace;
  line-height: 1.5;
  overflow-x: hidden;
}

/* Typography */
.pixel-edges {
  image-rendering: pixelated;
  -webkit-font-smoothing: none;
}

.chad-title {
  font-size: clamp(2.5rem, 8vw, 5rem);
  font-weight: 900;
  letter-spacing: -0.05em;
  text-transform: uppercase;
  text-shadow: 
    2px 2px 0 var(--chad-dark),
    4px 4px 0 rgba(255, 193, 49, 0.5);
}

.text-gradient {
  background: var(--gradient-gold);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 200% auto;
  animation: gradient 5s linear infinite;
}

/* Animations */
@keyframes float {
  0%, 100% { 
    transform: translateY(0) rotate(0); 
    filter: brightness(1);
  }
  50% { 
    transform: translateY(-20px) rotate(5deg);
    filter: brightness(1.2);
  }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.8; }
}

@keyframes gradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes glitch {
  0% { 
    transform: translate(0);
    text-shadow: none;
  }
  20% { 
    transform: translate(-2px, 2px);
    text-shadow: 2px 2px var(--chad-gold);
  }
  40% { 
    transform: translate(-2px, -2px);
    text-shadow: -2px -2px var(--chad-error);
  }
  60% { 
    transform: translate(2px, 2px);
    text-shadow: 2px -2px var(--chad-success);
  }
  80% { 
    transform: translate(2px, -2px);
    text-shadow: -2px 2px var(--chad-gold);
  }
  100% { 
    transform: translate(0);
    text-shadow: none;
  }
}

/* Card & Container Styles */
.pixel-border {
  border: 4px solid var(--chad-dark);
  box-shadow: 
    4px 4px 0 var(--chad-dark),
    -4px -4px 0 rgba(44, 54, 57, 0.1);
  transition: transform var(--transition-medium) cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.pixel-border:hover {
  transform: translate(-2px, -2px);
  box-shadow: 
    6px 6px 0 var(--chad-dark),
    -4px -4px 0 rgba(44, 54, 57, 0.1);
}

.story-card {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border-radius: 4px;
  padding: 2rem;
  position: relative;
  transition: all var(--transition-medium) cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.story-card:hover {
  transform: translateY(-8px);
  box-shadow: 
    0 20px 40px rgba(44, 54, 57, 0.1),
    0 0 0 4px rgba(255, 193, 49, 0.2);
}

/* Button Styles */
.nav-button {
  background: white;
  border: 2px solid var(--chad-dark);
  padding: 0.75rem 1.5rem;
  color: var(--chad-dark);
  font-weight: bold;
  transition: all var(--transition-fast) ease;
  box-shadow: 2px 2px 0 var(--chad-dark);
  position: relative;
  overflow: hidden;
}

.nav-button::after {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--chad-gold);
  opacity: 0;
  transition: opacity var(--transition-fast);
}

.nav-button:hover {
  transform: translate(-2px, -2px);
  box-shadow: 4px 4px 0 var(--chad-dark);
  color: var(--chad-gold);
}

.nav-button:hover::after {
  opacity: 0.1;
}

.nav-button:active {
  transform: translate(0, 0);
  box-shadow: 2px 2px 0 var(--chad-dark);
}

/* Achievement Styles */
.achievement-popup {
  transform: translateX(100%);
  transition: transform var(--transition-medium) cubic-bezier(0.175, 0.885, 0.32, 1.275);
  margin-bottom: 1rem;
}

.achievement-popup.show {
  transform: translateX(0);
}

/* Matrix Rain Effect */
.matrix-canvas {
  position: fixed;
  inset: 0;
  opacity: 0.05;
  pointer-events: none;
  z-index: var(--z-background);
}

/* Progress Bar */
.power-bar {
  height: 4px;
  background: var(--gradient-gold);
  transition: width var(--transition-medium) ease-out;
}

/* Reaction Buttons */
.reaction-btn {
  background: white;
  border: 2px solid var(--chad-dark);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  transition: all var(--transition-fast);
}

.reaction-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
  border-color: var(--chad-gold);
}

.reaction-btn:active {
  transform: translateY(0);
  box-shadow: var(--shadow-sm);
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: var(--chad-cream);
  border-left: 2px solid var(--chad-dark);
}

::-webkit-scrollbar-thumb {
  background: var(--chad-dark);
  border: 3px solid var(--chad-cream);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--chad-gold);
}

/* Responsive Design */
@media (max-width: 768px) {
  .pixel-border {
    border-width: 3px;
    box-shadow: 
      3px 3px 0 var(--chad-dark),
      -3px -3px 0 rgba(44, 54, 57, 0.1);
  }

  .story-card {
    padding: 1rem;
  }

  .nav-button {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }
}

/* Utility Classes */
.animate-float {
  animation: float 5s ease-in-out infinite;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-gradient {
  animation: gradient 5s linear infinite;
}

.animate-glitch {
  animation: glitch 3s infinite;
}

/* Hover Effects */
.hover-glow:hover {
  text-shadow: 0 0 8px var(--chad-gold);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

/* Interactive Elements */
.interactive-bg {
  transition: background-color var(--transition-fast);
}

.interactive-bg:hover {
  background-color: rgba(255, 193, 49, 0.1);
}

/* Focus States */
:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 193, 49, 0.5);
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Print Styles */
@media print {
  .pixel-border {
    box-shadow: none !important;
    border: 1px solid var(--chad-dark) !important;
  }

  .text-gradient {
    color: var(--chad-dark) !important;
    -webkit-text-fill-color: initial !important;
  }
}
</style>
